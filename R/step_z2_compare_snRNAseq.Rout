
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(data.table)
> library(stringr)
> library(ggplot2)
> library(ggpubr)
> library(ggpointdensity)
> theme_set(theme_classic2())
> library(ggcorrplot)
> library(qvalue)
> library(ggpointdensity)
> 
> # ----------------------------------------------------------------------
> # read in p-values for ASD
> # ----------------------------------------------------------------------
> 
> pval.path = "../results/_pvalues"
> 
> pval_files = list.files(path=pval.path, pattern="ASD", full.names=TRUE)
> pval_files
 [1] "../results/_pvalues/ASD_CARseq_Astro.txt"
 [2] "../results/_pvalues/ASD_CARseq_Exc.txt"  
 [3] "../results/_pvalues/ASD_CARseq_Inh.txt"  
 [4] "../results/_pvalues/ASD_CARseq_Micro.txt"
 [5] "../results/_pvalues/ASD_CARseq_Oligo.txt"
 [6] "../results/_pvalues/ASD_CARseq_OPC.txt"  
 [7] "../results/_pvalues/ASD_DESeq2_bulk.txt" 
 [8] "../results/_pvalues/ASD_TOAST_Astro.txt" 
 [9] "../results/_pvalues/ASD_TOAST_Exc.txt"   
[10] "../results/_pvalues/ASD_TOAST_Inh.txt"   
[11] "../results/_pvalues/ASD_TOAST_Micro.txt" 
[12] "../results/_pvalues/ASD_TOAST_Oligo.txt" 
[13] "../results/_pvalues/ASD_TOAST_OPC.txt"   
> 
> f1 = pval_files[1]
> pval_carseq = fread(f1)
> lb = str_extract(basename(f1), "(?<=ASD_)\\w+_\\w+(?=.txt)")
> names(pval_carseq)[3] = lb
> 
> dim(pval_carseq)
[1] 19604     3
> pval_carseq[1:2,]
              gene_id gene_name CARseq_Astro
1: ENSG00000000003.10    TSPAN6    0.1255027
2:  ENSG00000000419.8      DPM1    0.6632756
> 
> length(unique(pval_carseq$gene_id))
[1] 19604
> length(unique(pval_carseq$gene_name))
[1] 19547
> 
> for(f1 in pval_files[-1]){
+   d1 = fread(f1)
+   if(any(d1$gene_id != pval_carseq$gene_id)){
+     stop("gene_id do not match\n")
+   }
+   
+   bn = basename(f1)
+   lb = str_extract(bn, "(?<=ASD_)\\w+_\\w+(?=.txt)")
+   
+   pval_carseq[[lb]] = d1$pvalue
+ }
> 
> dim(pval_carseq)
[1] 19604    15
> pval_carseq[1:2,]
              gene_id gene_name CARseq_Astro CARseq_Exc CARseq_Inh CARseq_Micro
1: ENSG00000000003.10    TSPAN6    0.1255027  0.6046280 0.02933506    0.7002754
2:  ENSG00000000419.8      DPM1    0.6632756  0.1739825 0.07872326    1.0000000
   CARseq_Oligo CARseq_OPC  DESeq2_bulk TOAST_Astro TOAST_Exc TOAST_Inh
1:    0.3585876          1 0.0001603225   0.9589563 0.8811683 0.7498910
2:    0.4720418          1 0.6959505937   0.6538012 0.7786788 0.8705232
   TOAST_Micro TOAST_Oligo TOAST_OPC
1:   0.1313709   0.3853622 0.9883231
2:   0.9372846   0.7714128 0.7818392
> 
> # ----------------------------------------------------------------------
> # read in p-values from snRNA-seq analysis
> # ----------------------------------------------------------------------
> 
> cts = c("Astro", "Inh", "Exc", "Micro", "Oligo", "OPC")
> cts
[1] "Astro" "Inh"   "Exc"   "Micro" "Oligo" "OPC"  
> 
> grp = cts[1]
> fnm = sprintf("../results/stepz1_DESeq2_%s.txt", grp)
> 
> deseq2 = read.table(file=fnm, sep="\t", header=TRUE)
> dim(deseq2)
[1] 18041     8
> deseq2[1:2,]
         baseMean log2FoldChange     lfcSE        stat    pvalue      padj
DNAJC11 14.254316    0.008668832 0.2403539  0.03606694 0.9712290 0.9986439
NADK     3.882825   -0.294294252 0.3861081 -0.76220698 0.4459365 0.9064531
        n_zeros percent_zeros
DNAJC11       2    0.08695652
NADK          0    0.00000000
> 
> pval_snseq = data.frame(gene_name = rownames(deseq2), 
+                         stringsAsFactors=FALSE)
> percent_zeros = pval_snseq
> 
> pval_snseq[[grp]] = deseq2$pvalue
> percent_zeros[[grp]] = deseq2$percent_zeros
> 
> for(grp in cts[-1]){
+   fnm = sprintf("../results/stepz1_DESeq2_%s.txt", grp)
+   
+   deseq2 = read.table(file=fnm, sep="\t", header=TRUE)
+   
+   if(nrow(deseq2) != nrow(pval_snseq)){
+     stop("the number of rows of deseq2 results do not match\n")
+   }
+   
+   if(any(rownames(deseq2) != pval_snseq$gene_name)){
+     stop("rownames of deseq2 results do not match\n")
+   }
+   
+   pval_snseq[[grp]] = deseq2$pvalue
+   percent_zeros[[grp]] = deseq2$percent_zeros
+ }
> 
> dim(pval_snseq)
[1] 18041     7
> pval_snseq[1:2,]
  gene_name     Astro        Inh       Exc     Micro     Oligo       OPC
1   DNAJC11 0.9712290 0.05004768 0.1430633 0.9159246 0.9513268 0.2426673
2      NADK 0.4459365 0.68426700 0.3130348 0.5809093 0.6873919 0.8758234
> 
> dim(percent_zeros)
[1] 18041     7
> percent_zeros[1:2,]
  gene_name      Astro        Inh Exc     Micro     Oligo       OPC
1   DNAJC11 0.08695652 0.00000000   0 0.0952381 0.0000000 0.0000000
2      NADK 0.00000000 0.04347826   0 0.4761905 0.3913043 0.1304348
> 
> colSums(pval_snseq[,-1] < 0.001)
Astro   Inh   Exc Micro Oligo   OPC 
   NA   205   110    NA    NA    NA 
> colSums(percent_zeros[,-1] > 0.5)
Astro   Inh   Exc Micro Oligo   OPC 
  989    35     1  6587  2357   913 
> 
> # ----------------------------------------------------------------------
> # take the intersection of genes from the two studies
> # ----------------------------------------------------------------------
> 
> nrow(pval_snseq)
[1] 18041
> nrow(pval_carseq)
[1] 19604
> 
> pval_snseq$gene_name[1:2]
[1] "DNAJC11" "NADK"   
> pval_carseq$gene_name[1:2]
[1] "TSPAN6" "DPM1"  
> 
> gene2use = intersect(pval_carseq$gene_name, pval_snseq$gene_name)
> length(gene2use)
[1] 12527
> 
> pval_snseq  = pval_snseq[match(gene2use,  pval_snseq$gene_name),]
> pval_carseq = pval_carseq[match(gene2use, pval_carseq$gene_name),]
> 
> dim(pval_snseq)
[1] 12527     7
> pval_snseq[1:2,]
      gene_name     Astro       Inh       Exc     Micro     Oligo       OPC
7741     TSPAN6 0.9402924 0.2318841 0.9527387 0.5604572 0.9015658 0.1404762
15992      DPM1 0.1983077 0.7365932 0.5050562 0.8221065 0.2178388 0.4335813
> 
> pval_carseq = as.data.frame(pval_carseq)
> dim(pval_carseq)
[1] 12527    15
> pval_carseq[1:2,]
             gene_id gene_name CARseq_Astro CARseq_Exc CARseq_Inh CARseq_Micro
1 ENSG00000000003.10    TSPAN6    0.1255027  0.6046280 0.02933506    0.7002754
2  ENSG00000000419.8      DPM1    0.6632756  0.1739825 0.07872326    1.0000000
  CARseq_Oligo CARseq_OPC  DESeq2_bulk TOAST_Astro TOAST_Exc TOAST_Inh
1    0.3585876          1 0.0001603225   0.9589563 0.8811683 0.7498910
2    0.4720418          1 0.6959505937   0.6538012 0.7786788 0.8705232
  TOAST_Micro TOAST_Oligo TOAST_OPC
1   0.1313709   0.3853622 0.9883231
2   0.9372846   0.7714128 0.7818392
> 
> table(pval_snseq$gene_name == pval_carseq$gene_name)

 TRUE 
12527 
> 
> saveRDS(pval_carseq, "../results/step_z2_pval_carseq.rds")
> saveRDS(pval_snseq,  "../results/step_z2_pval_snseq.rds")
> 
> # ----------------------------------------------------------------------
> # check the correlation matrix within each method
> # ----------------------------------------------------------------------
> 
> cor_carseq = cor(pval_carseq[,-(1:2)], method = "spearman", use="pair")
> summary(c(cor_carseq))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
-0.15165 -0.01299  0.02731  0.11755  0.08367  1.00000 
> 
> cor_snseq = cor(pval_snseq[,-(1:1)], method = "spearman", use="pair")
> summary(c(cor_snseq))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.03647 0.08778 0.11583 0.26772 0.15465 1.00000 
> 
> gc1 = ggcorrplot(cor_carseq, tl.cex = 6)  
> 
> pdf("../figures/step_z2_cor_CARseq.pdf", width=3.6, height=2.8)
> print(gc1)
> dev.off()
null device 
          1 
> 
> gc2 = ggcorrplot(cor_snseq, tl.cex = 6)  
> 
> pdf("../figures/step_z2_cor_snseq.pdf", width=2.7, height=2.1)
> print(gc2)
> dev.off()
null device 
          1 
> 
> # ----------------------------------------------------------------------
> # check the correlation matrix between methods
> # ----------------------------------------------------------------------
> 
> cormat = cor(pval_carseq[,-(1:2)], pval_snseq[,-1], 
+              method = "spearman", use="pair")
> summary(c(cormat))
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-0.052450 -0.002512  0.011197  0.008454  0.020781  0.062784 
> 
> gc1 = ggcorrplot(t(cormat), tl.cex = 6, title="Spearman correlation") + 
+   scale_fill_gradient2(limit = c(-0.08,0.08), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 0) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_cor_CARseq_vs_snRNAseq.pdf", width=3, height=3.5)
> print(gc1)
> dev.off()
null device 
          1 
> 
> cor_pval = matrix(nrow=nrow(cormat), ncol=ncol(cormat))
> for(i in 1:nrow(cor_pval)){
+   for(j in 1:ncol(cor_pval)){
+     xi = pval_carseq[,2+i]
+     yj = pval_snseq[,1+j]
+     
+     cor_pval[i,j] = cor.test(xi, yj, alternative = "greater", 
+                              method = "spearman", use="pair")$p.value
+   }
+ }
There were 50 or more warnings (use warnings() to see the first 50)
> 
> rownames(cor_pval) = names(pval_carseq)[-(1:2)]
> colnames(cor_pval) = names(pval_snseq)[-(1)]
> 
> summary(c(cor_pval))
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.00000 0.01016 0.10519 0.30504 0.61041 1.00000 
> sort(c(cor_pval))[1:10]
 [1] 1.056560e-12 5.375134e-11 5.609158e-08 1.381876e-06 1.454590e-04
 [6] 1.960756e-04 5.575172e-04 7.949769e-04 9.142681e-04 1.597965e-03
> cor_pval[which(cor_pval < 1e-5)] = 1e-5
> 
> gc2 = ggcorrplot(t(-log10(cor_pval)), tl.cex = 6, 
+                  title="-log10(p-value)") + 
+   scale_fill_gradient2(limit = c(0,5.01), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 1) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_cor_pval_CARseq_vs_snRNAseq.pdf", width=3, height=3.5)
> print(gc2)
> dev.off()
null device 
          1 
> 
> # ----------------------------------------------------------------------
> # check the association using fisher exact test
> # ----------------------------------------------------------------------
> 
> pcut = 0.05
> fisher_pval = matrix(nrow=nrow(cormat), ncol=ncol(cormat))
> 
> for(i in 1:nrow(cor_pval)){
+   for(j in 1:ncol(cor_pval)){
+     xi = pval_carseq[,2+i]
+     yj = pval_snseq[,1+j]
+     f1 = fisher.test(xi < pcut, yj < pcut, alternative = "greater")
+     fisher_pval[i,j] = f1$p.value
+   }
+ }
> 
> rownames(fisher_pval) = names(pval_carseq)[-(1:2)]
> colnames(fisher_pval) = names(pval_snseq)[-(1)]
> 
> summary(c(fisher_pval))
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.0000001 0.0875839 0.3703456 0.4367626 0.7986072 0.9989152 
> sort(c(fisher_pval))[1:10]
 [1] 8.217283e-08 9.171835e-07 4.917078e-04 2.020911e-03 2.501841e-03
 [6] 2.687960e-03 6.557555e-03 7.576516e-03 1.060859e-02 2.387917e-02
> fisher_pval[which(fisher_pval < 1e-4)] = 1e-4
> 
> gc2 = ggcorrplot(t(-log10(fisher_pval)), tl.cex = 6) + 
+   scale_fill_gradient2(limit = c(0,4.01), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 1) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_fisher_pval_CARseq_vs_snRNAseq.pdf", 
+     width=3, height=3.5)
> print(gc2)
> dev.off()
null device 
          1 
> 
> # ----------------------------------------------------------------------
> # read in the correlation between bulk RNA-seq and pseudo bulk
> # ----------------------------------------------------------------------
> 
> sn_cr = fread("../data/sn_bulk_corr.txt")
> dim(sn_cr)
[1] 12796     3
> sn_cr[1:5,]
                ID         gene         r
1: ENSG00000233913 CTC-575D19.1 0.9381673
2: ENSG00000228065    LINC01515 0.8954752
3: ENSG00000225972     MTND1P23 0.8886650
4: ENSG00000113494         PRLR 0.8577662
5: ENSG00000229807         XIST 0.8446731
> 
> table(sn_cr$r > 0.5)

FALSE  TRUE 
11821   975 
> table(sn_cr$r > 0.3)

FALSE  TRUE 
 7787  5009 
> 
> table(pval_snseq$gene_name == gene2use)

 TRUE 
12527 
> table(pval_carseq$gene_name == gene2use)

 TRUE 
12527 
> 
> sn_cr_v = rep(NA, length(gene2use))
> match_gene = match(gene2use, sn_cr$gene)
> table(is.na(match_gene))

FALSE  TRUE 
10893  1634 
> sn_cr_v[!is.na(match_gene)] = sn_cr$r[match_gene[!is.na(match_gene)]]
> 
> table(sn_cr_v >= 0.31)

FALSE  TRUE 
 6836  4057 
> w2kp = which(sn_cr_v >= 0.31)
> 
> # ----------------------------------------------------------------------
> # check the overall correlation matrix
> # ----------------------------------------------------------------------
> 
> cormat = cor(pval_carseq[w2kp,-(1:2)], pval_snseq[w2kp,-1], 
+              method = "spearman", use="pair")
> summary(c(cormat))
      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. 
-0.0499088 -0.0119289  0.0013561  0.0003925  0.0156430  0.0415898 
> 
> gc1 = ggcorrplot(t(cormat), tl.cex = 6) + 
+   scale_fill_gradient2(limit = c(-0.08,0.08), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 0) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_cor_CARseq_vs_snRNAseq_selected_genes.pdf", 
+     width=3, height=3.5)
> print(gc1)
> dev.off()
null device 
          1 
> 
> cor_pval = matrix(nrow=nrow(cormat), ncol=ncol(cormat))
> for(i in 1:nrow(cor_pval)){
+   for(j in 1:ncol(cor_pval)){
+     xi = pval_carseq[w2kp,2+i]
+     yj = pval_snseq[w2kp,1+j]
+     
+     cor_pval[i,j] = cor.test(xi, yj, alternative = "greater", 
+                              method = "spearman", use="pair")$p.value
+   }
+ }
There were 48 warnings (use warnings() to see them)
> 
> rownames(cor_pval) = names(pval_carseq)[-(1:2)]
> colnames(cor_pval) = names(pval_snseq)[-(1)]
> 
> summary(c(cor_pval))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.004079 0.159769 0.465621 0.478789 0.776200 0.999251 
> sort(c(cor_pval))[1:10]
 [1] 0.004079109 0.013415855 0.016151715 0.016792094 0.023273558 0.028527948
 [7] 0.041223184 0.041632915 0.046253972 0.049019208
> cor_pval[which(cor_pval < 1e-3)] = 1e-3
> 
> gc2 = ggcorrplot(t(-log10(cor_pval)), tl.cex = 6) + 
+   scale_fill_gradient2(limit = c(0,3.01), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 1) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_cor_pval_CARseq_vs_snRNAseq_selected_genes.pdf", 
+     width=3, height=3.5)
> print(gc2)
> dev.off()
null device 
          1 
> 
> # ----------------------------------------------------------------------
> # check the association using fisher exact test
> # ----------------------------------------------------------------------
> 
> pcut = 0.05
> fisher_pval = matrix(nrow=nrow(cormat), ncol=ncol(cormat))
> 
> for(i in 1:nrow(fisher_pval)){
+   for(j in 1:ncol(fisher_pval)){
+     xi = pval_carseq[w2kp,2+i]
+     yj = pval_snseq[w2kp,1+j]
+     f1 = fisher.test(xi < pcut, yj < pcut, alternative = "greater")
+     fisher_pval[i,j] = f1$p.value
+   }
+ }
> 
> rownames(fisher_pval) = names(pval_carseq)[-(1:2)]
> colnames(fisher_pval) = names(pval_snseq)[-(1)]
> 
> summary(c(fisher_pval))
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. 
0.005894 0.197099 0.434651 0.503092 0.828993 0.998349 
> sort(c(fisher_pval))[1:10]
 [1] 0.005893768 0.016292659 0.034102252 0.045152967 0.048035109 0.055228564
 [7] 0.060140034 0.078160185 0.079419950 0.100345128
> fisher_pval[which(fisher_pval < 1e-3)] = 1e-3
> 
> gc2 = ggcorrplot(t(-log10(fisher_pval)), tl.cex = 6) + 
+   scale_fill_gradient2(limit = c(0,3.01), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 1) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_fisher_pval_CARseq_vs_snRNAseq_selected_genes.pdf", 
+     width=3, height=3.5)
> print(gc2)
> dev.off()
null device 
          1 
> 
> # ----------------------------------------------------------------------
> # check the association within carseq using fisher exact test
> # ----------------------------------------------------------------------
> 
> pcut = 0.05
> fisher_carseq = matrix(nrow=nrow(cor_carseq), ncol=ncol(cor_carseq))
> 
> for(i in 1:nrow(fisher_carseq)){
+   for(j in 1:ncol(fisher_carseq)){
+     xi = pval_carseq[,2+i]
+     yj = pval_carseq[,2+j]
+     f1 = fisher.test(xi < pcut, yj < pcut, alternative = "greater")
+     fisher_carseq[i,j] = f1$p.value
+   }
+ }
> 
> rownames(fisher_carseq) = names(pval_carseq)[-(1:2)]
> colnames(fisher_carseq) = names(pval_carseq)[-(1:2)]
> 
> summary(c(fisher_carseq))
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.0000000 0.0000001 0.0851466 0.3664354 0.8512921 1.0000000 
> sort(c(fisher_carseq[upper.tri(fisher_carseq)]))[1:20]
 [1]  0.000000e+00 6.583276e-165 1.656413e-145  1.068534e-94  5.135158e-73
 [6]  9.176272e-39  9.502791e-39  6.006883e-26  4.386294e-14  1.106731e-10
[11]  1.621427e-09  3.769074e-09  2.128888e-08  6.482569e-08  9.589644e-08
[16]  2.176595e-07  3.961893e-06  8.835513e-06  1.033526e-05  1.278544e-05
> fisher_carseq[which(fisher_carseq < 1e-10)] = 1e-10
> 
> gc2 = ggcorrplot(t(-log10(fisher_carseq)), tl.cex = 6) + 
+   scale_fill_gradient2(limit = c(0,10.01), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 2) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_fisher_pval_CARseq.pdf", 
+     width=4.5, height=3.5)
> print(gc2)
> dev.off()
null device 
          1 
> 
> 
> # ----------------------------------------------------------------------
> # check the association within snSeq using fisher exact test
> # ----------------------------------------------------------------------
> 
> pcut = 0.05
> fisher_snseq = matrix(nrow=nrow(cor_snseq), ncol=ncol(cor_snseq))
> 
> for(i in 1:nrow(fisher_snseq)){
+   for(j in 1:ncol(fisher_snseq)){
+     xi = pval_snseq[,1+i]
+     yj = pval_snseq[,1+j]
+     f1 = fisher.test(xi < pcut, yj < pcut, alternative = "greater")
+     fisher_snseq[i,j] = f1$p.value
+   }
+ }
> 
> rownames(fisher_snseq) = names(pval_snseq)[-(1)]
> colnames(fisher_snseq) = names(pval_snseq)[-(1)]
> 
> summary(c(fisher_snseq))
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.000e+00 0.000e+00 0.000e+00 7.431e-08 0.000e+00 1.336e-06 
> sort(c(fisher_snseq[upper.tri(fisher_snseq)]))[1:10]
 [1] 3.082274e-213  2.730118e-88  4.242204e-79  1.791477e-77  1.020004e-48
 [6]  2.343118e-48  6.786539e-47  3.334777e-36  6.044769e-34  7.532937e-34
> 
> fisher_snseq_bounded = fisher_snseq
> fisher_snseq_bounded[which(fisher_snseq < 1e-80)] = 1e-80
> 
> gc2 = ggcorrplot(t(-log10(fisher_snseq_bounded)), tl.cex = 6) + 
+   scale_fill_gradient2(limit = c(0,80.01), low = "blue", high =  "red", 
+                        mid = "white", midpoint = 2) 
Scale for 'fill' is already present. Adding another scale for 'fill', which
will replace the existing scale.
> 
> pdf("../figures/step_z2_fisher_pval_snseq.pdf", 
+     width=3, height=2.4)
> print(gc2)
> dev.off()
null device 
          1 
> 
> # ----------------------------------------------------------------------
> # check a few cases
> # ----------------------------------------------------------------------
> 
> w1 = which(fisher_snseq < 1e-100 & fisher_snseq > 0, arr.ind = TRUE)
> cts = rownames(fisher_snseq)
> df1 = data.frame(ct1=cts[w1[,1]], ct2=cts[w1[,2]], 
+                  fisher_pval=fisher_snseq[w1], stringsAsFactors=FALSE)
> df1[order(df1$fisher_pval),]
  ct1 ct2   fisher_pval
2 Inh Exc 3.082274e-213
1 Exc Inh 3.082274e-213
> 
> summary(pval_snseq$Inh)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.0000039 0.1133175 0.3491889 0.3963947 0.6507380 0.9999094 
> summary(pval_snseq$Exc)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.0000009 0.1428460 0.3858908 0.4204915 0.6769873 0.9996490 
> 
> gs1 = ggplot(pval_snseq,aes(x=-log10(Exc),y=-log10(Inh))) +
+   geom_pointdensity(size = 0.6) + scale_color_viridis_c()
> 
> pdf("../figures/step_z2_snseq_Exc_Inh.pdf", 
+     width=4.5, height=3.5)
> print(gs1)
> dev.off()
null device 
          1 
> 
> c1 = chisq.test(pval_snseq$Inh < pcut, pval_snseq$Exc < pcut)
> c1$p.value
[1] 2.524458e-277
> c1$expected
                     pval_snseq$Exc < pcut
pval_snseq$Inh < pcut    FALSE      TRUE
                FALSE 9345.719 1225.2808
                TRUE  1729.281  226.7192
> c1$observed
                     pval_snseq$Exc < pcut
pval_snseq$Inh < pcut FALSE TRUE
                FALSE  9809  762
                TRUE   1266  690
> 
> gc()
          used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)
Ncells 1003810 53.7    1655145 88.4         NA  1655145 88.4
Vcells 2896686 22.1    8388608 64.0      32768  8388477 64.0
> 
> sessionInfo()
R version 3.6.2 (2019-12-12)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS Catalina 10.15.7

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] qvalue_2.16.0        ggcorrplot_0.1.3     ggpointdensity_0.1.0
[4] ggpubr_0.4.0.999     ggplot2_3.3.1        stringr_1.4.0       
[7] data.table_1.12.8   

loaded via a namespace (and not attached):
 [1] tidyselect_1.0.0  purrr_0.3.3       reshape2_1.4.3    splines_3.6.2    
 [5] haven_2.3.0       lattice_0.20-38   carData_3.0-4     colorspace_1.4-1 
 [9] vctrs_0.3.0       generics_0.0.2    viridisLite_0.3.0 rlang_0.4.6      
[13] pillar_1.4.3      foreign_0.8-75    glue_1.3.1        withr_2.1.2      
[17] readxl_1.3.1      lifecycle_0.2.0   plyr_1.8.5        munsell_0.5.0    
[21] ggsignif_0.6.0    gtable_0.3.0      cellranger_1.1.0  zip_2.0.4        
[25] labeling_0.3      rio_0.5.16        forcats_0.5.0     curl_4.3         
[29] broom_0.5.6       Rcpp_1.0.3        backports_1.1.5   scales_1.1.0     
[33] abind_1.4-5       farver_2.0.3      hms_0.5.3         digest_0.6.23    
[37] stringi_1.4.5     openxlsx_4.1.5    rstatix_0.6.0     dplyr_0.8.4      
[41] grid_3.6.2        tools_3.6.2       magrittr_1.5      tibble_3.0.1     
[45] crayon_1.3.4      car_3.0-8         tidyr_1.0.2       pkgconfig_2.0.3  
[49] ellipsis_0.3.0    assertthat_0.2.1  R6_2.4.1          nlme_3.1-144     
[53] compiler_3.6.2   
> q(save="no")
> proc.time()
   user  system elapsed 
 11.363   0.475   6.922 
